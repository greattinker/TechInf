--
-- Copyright (c) 20013
-- Technische Universitaet Dresden, Dresden, Germany
-- Faculty of Computer Science
-- Institute for Computer Engineering
-- Chair for VLSI-Design, Diagnostics and Architecture
-- 
-- For internal educational use only.
-- The distribution of source code or generated files
-- is prohibited.
--

--
-- Entity: Example
-- Author(s): Martin Zabel, Matthias Haesing
-- 
-- Simple example for the Terasic DE0 board.
--
-- Revision:    $Revision: 1.1 $
-- Last change: $Date: 2013-10-09 12:49:38 $
--

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity AutoLED is
  
  port (
		clk : in std_logic;
		btn : in std_logic;
		ld  : out  std_logic
		);
		
end AutoLED;

architecture led1 of AutoLED is 
	
	type zustaende is (aus, an);  -- 2 Zustände
	attribute enum_encoding : string;
	attribute enum_encoding of zustaende : type is "1 0"; -- an = 0, aus = 1 (low aktive LED)
	signal z_alt, z_neu : zustaende := aus;
	signal led : std_logic := '0';

begin

	process(clk)  -- neuen Zustand übernehmen
	begin
		if rising_edge(clk) then
			z_alt <= z_neu;
			ld <= led;
		end if;
	end process;

	process(btn)  -- neuen Zustand + Ausgabe berechnen
	begin
		if rising_edge(btn) then
			case z_alt is
				when aus => z_neu <= an;
								led <= '0';
				when an	=> z_neu <= aus;
								led <= '1';
			end case;
		end if;
	end process;
	
end led1;